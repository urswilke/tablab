% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compare_counts.R
\name{compare_counts}
\alias{compare_counts}
\title{Compare counts of two dataframes}
\usage{
compare_counts(l, id = "id", var = "var", val = "val",
  vallab = "vallab")
}
\arguments{
\item{l}{List of dataframes.}

\item{id}{name of the key variable in the dataframes.}

\item{var}{Name of the variable column in the resulting dataframe.}

\item{val}{Name of the value column in the resulting dataframe.}

\item{vallab}{Name of the value label column in the resulting dataframe.}
}
\value{
Dataframe consisting of 7 columns \code{var}, \code{val}, \code{vallab1}, \code{vallab2}, \code{df1}, \code{df2} & \code{n}, containing a comparison of the counts of variable values (and their respective value labels) of the two dataframes in long format.
}
\description{
Compare counts of two dataframes
}
\examples{
# load spss data
path <- system.file("examples", "iris.sav", package = "haven")
df1 <- haven::read_sav(path) \%>\%
  # add id column
  tibble::rownames_to_column("id")
# create a modified copy:
df2 <- df1
df2[1, "Species"] <- 2
# modify the value label of "setosa"
df2$Species <- haven::labelled(df2$Species,
                               labels = c(setosa_mod = 1, versicolor = 2, virginica = 3))
# compare the dataframes counts:
compare_counts(list(df1, df2))
# compare the dataframes and only show the counts where values have changed:
compare_counts(list(df1, df2)) \%>\% dplyr::filter(val1 != val2)
# compare the dataframes and only show the counts where value labels have changed:
compare_counts(list(df1, df2)) \%>\% dplyr::filter(vallab1 != vallab2)

# Create another modified copy
df3 <- df2
df3[2, "Species"] <- 3
# modify the value label of "versicolor"
df2$Species <- haven::labelled(df2$Species,
                               labels = c(setosa = 1, versicolor_mod = 2, virginica = 3))
# compare the dataframes counts:
l <- list(df1, df2, df3)
cmp <- compare_counts(l)
cmp
# compare the dataframes and only show the counts where values have changed:
# (HACK to calculate logical where values differ):
library(dplyr)
vals_differ <-
  cmp \%>\%
  select(matches("val\\\\d+$")) \%>\%
  {. == cmp$val1} \%>\%
  {rowSums(.) != length(l)}
cmp \%>\% filter(vals_differ)

# show where either values or value labels differ:
vallabs_differ <-
  cmp \%>\%
  select(matches("vallab\\\\d+$")) \%>\%
  {. == cmp$val1} \%>\%
  {rowSums(.) != length(l)}
cmp \%>\% filter(vals_differ | vallabs_differ)
}
