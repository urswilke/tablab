% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cmp_cts.R
\name{cmp_cts}
\alias{cmp_cts}
\title{Compare counts of a list of dataframes}
\usage{
cmp_cts(l, id = "id", include_ids = FALSE)
}
\arguments{
\item{l}{List of dataframes.}

\item{id}{name of the key variable in the dataframes.}

\item{include_ids}{Logical denoting whether a list column of the ids should
be included in the results. The ids in the list show at which values of
\code{id} the variable \code{var} contains the value \code{val1}.}
}
\value{
Dataframe consisting of 9 columns \code{var}, \code{val},
\code{vallab1}, \code{vallab2}, \code{df1}, \code{df2} & \code{n},
containing a comparison of the counts of variable values (and their
respective value labels) of the two dataframes in long format.
\code{vals_differ} & \code{vallabs_differ} are logical columns indicating
if all values / value labels are equal.
}
\description{
Compare counts of a list of dataframes
}
\examples{
# load spss data
path <- system.file("examples", "iris.sav", package = "haven")
df1 <- haven::read_sav(path) \%>\%
  # add id column
  tibble::rownames_to_column("id")

# create a modified copy:
df2 <- df1
df2[1, "Species"] <- 2

# compare the dataframes counts:
cmp_cts(list(df1, df2))
# compare the dataframes and only show the counts where values have changed:
cmp_cts(list(df1, df2)) \%>\% dplyr::filter(val1 != val2)

# Create another modified copy
df3 <- df2
df3[2, "Species"] <- 3

# compare the dataframes counts:
l <- list(df1, df2, df3)
cmp <- cmp_cts(l)
cmp

# compare the dataframes and only show the counts where values have changed:
cmp \%>\% dplyr::filter(!(val1 == val2 & val2 == val3))

}
