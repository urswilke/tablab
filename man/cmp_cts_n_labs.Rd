% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cmp_cts_n_labs.R
\name{cmp_cts_n_labs}
\alias{cmp_cts_n_labs}
\title{Compare counts and labels of a list dataframes}
\usage{
cmp_cts_n_labs(l, id = "id")
}
\arguments{
\item{l}{List of dataframes.}

\item{id}{name of the key variable in the dataframes.}
}
\value{
Dataframe consisting of 9 columns \code{var}, \code{val}, \code{vallab1}, \code{vallab2}, \code{df1}, \code{df2} & \code{n}, containing a comparison of the counts of variable values (and their respective value labels) of the two dataframes in long format. \code{vals_differ} & \code{vallabs_differ} are logical columns indicating if all values / value labels are equal.
}
\description{
Compare counts and labels of a list dataframes
}
\examples{
# load spss data
path <- system.file("examples", "iris.sav", package = "haven")
df1 <- haven::read_sav(path) \%>\%
  # add id column
  tibble::rownames_to_column("id")

# create a modified copy:
df2 <- df1
df2[1, "Species"] <- 2
# modify the value label of "setosa"
df2$Species <- haven::labelled(df2$Species,
                               labels = c(setosa_mod = 1, versicolor = 2, virginica = 3),
                               label = "Species")

# compare the dataframes counts:
cmp_cts_n_labs(list(df1, df2))
# compare the dataframes and only show the counts where values have changed:
cmp_cts_n_labs(list(df1, df2)) \%>\% dplyr::filter(val1 != val2)
# compare the dataframes and only show the counts where value labels have changed:
cmp_cts_n_labs(list(df1, df2)) \%>\% dplyr::filter(vallab1 != vallab2)

# Create another modified copy
df3 <- df2
df3[2, "Species"] <- 3
# modify the value label of "versicolor"
df2$Species <- haven::labelled(df2$Species,
                               labels = c(setosa = 1, versicolor_mod = 2, virginica = 3),
                               label = "Species_mod")

# compare the dataframes counts:
l <- list(df1, df2, df3)
cmp <- cmp_cts_n_labs(l)
cmp

# compare the dataframes and only show the counts where values have changed:
cmp \%>\% dplyr::filter(vals_differ)

# To show where either values or value labels differ:
cmp \%>\% dplyr::filter(vals_differ | vallabs_differ)
}
